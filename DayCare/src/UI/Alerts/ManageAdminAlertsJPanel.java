/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.Alerts;

import Business.Directories.PersonDirectory;
import Business.Entities.Teacher;
import Business.Util.DateUtil;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.Date;
import java.util.List;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ketanmalik
 */
public class ManageAdminAlertsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageAdminAlertsJPanel
     */
    private JPanel displayPanel;
    private PersonDirectory personDirectory;

    public ManageAdminAlertsJPanel(JPanel displayPanel) {
        personDirectory = PersonDirectory.getObject();
        initComponents();
        populateTable("er", 7);
        this.displayPanel = displayPanel;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        backBtn2 = new javax.swing.JButton();
        alertsLabel = new javax.swing.JLabel();
        alertsDropdown = new javax.swing.JComboBox<>();
        filterLabel = new javax.swing.JLabel();
        filterDropdown = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        filterTbl = new javax.swing.JTable();
        pastDueCheckBox = new javax.swing.JCheckBox();

        setBackground(new java.awt.Color(0, 153, 153));

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Manage Administrative Alerts");

        backBtn2.setText("Back");
        backBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtn2ActionPerformed(evt);
            }
        });

        alertsLabel.setForeground(new java.awt.Color(255, 255, 255));
        alertsLabel.setText("Alert Type:");

        alertsDropdown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Employee Review", "Student Registration" }));

        filterLabel.setForeground(new java.awt.Color(255, 255, 255));
        filterLabel.setText("Due In:");

        filterDropdown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Next 7 Days", "Next 15 Days", "Next 30 Days" }));
        filterDropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterDropdownActionPerformed(evt);
            }
        });

        filterTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Due Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(filterTbl);
        if (filterTbl.getColumnModel().getColumnCount() > 0) {
            filterTbl.getColumnModel().getColumn(0).setResizable(false);
            filterTbl.getColumnModel().getColumn(1).setResizable(false);
            filterTbl.getColumnModel().getColumn(2).setResizable(false);
        }

        pastDueCheckBox.setForeground(new java.awt.Color(255, 255, 255));
        pastDueCheckBox.setText("Past Due");
        pastDueCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pastDueCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(backBtn2)
                                .addGap(398, 398, 398)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(alertsLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(alertsDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(filterLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(filterDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(pastDueCheckBox))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(259, 259, 259)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(436, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(backBtn2))
                .addGap(108, 108, 108)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(alertsLabel)
                    .addComponent(alertsDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filterLabel)
                    .addComponent(filterDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pastDueCheckBox))
                .addGap(63, 63, 63)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(128, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void populateTable(String mode, int filter) {
        DefaultTableModel dtm = (DefaultTableModel) filterTbl.getModel();
        dtm.setRowCount(0);

        if (mode.equals("er")) {
            List<Teacher> teacherList = personDirectory.getTeacherDirectory();
            for (Teacher t : teacherList) {
                boolean anniversary = DateUtil.checkAnniversary(t.getDateOfJoining());
                long diff = DateUtil.getDaysDifference(t.getDateOfJoining());
                boolean isOverdue = DateUtil.isAnniversaryOverdue(t.getDateOfJoining());
                if (pastDueCheckBox.isSelected()) {
                    alertsDropdown.setEnabled(false);
                    filterDropdown.setEnabled(false);
                    if (isOverdue) {
                        Object[] row = new Object[3];
                        row[0] = t.getId();
                        row[1] = t;
                        row[2] = DateUtil.getDateToString(DateUtil.plusYears(t.getDateOfJoining()));

                        dtm.addRow(row);
                    }
                } else {
                    alertsDropdown.setEnabled(true);
                    filterDropdown.setEnabled(true);
                    if (diff >= 364) {
                        if (anniversary) {
                            Object[] row = new Object[3];
                            row[0] = t.getId();
                            row[1] = t;
                            row[2] = DateUtil.getDateToString(new Date());
                            dtm.addRow(row);
                        } else {
                            if (!isOverdue) {
                                Object[] row = new Object[3];
                                row[0] = t.getId();
                                row[1] = t;
                                int dueIn = DateUtil.getDueDate(t.getDateOfJoining(), 0);
                                if (dueIn == -999) {
                                    row[2] = DateUtil.getDateToString(DateUtil.plusMonths(t.getDateOfJoining()));
                                } else {
                                    row[2] = DateUtil.getDateToString(DateUtil.plusDays(new Date(), dueIn));
                                }
                                dtm.addRow(row);
                            }
                        }
                    }
                }
            }
        }
    }
    private void backBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtn2ActionPerformed
        displayPanel.remove(this);
        Component[] componentArray = displayPanel.getComponents();
        Component component = componentArray[componentArray.length - 1];
        AlertsJPanel ap = (AlertsJPanel) component;
        ap.populateAdministrativeTable();
        ap.populateImmunizationTable();
        CardLayout layout = (CardLayout) displayPanel.getLayout();
        layout.previous(displayPanel);
    }//GEN-LAST:event_backBtn2ActionPerformed

    private void filterDropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterDropdownActionPerformed
    }//GEN-LAST:event_filterDropdownActionPerformed

    private void pastDueCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pastDueCheckBoxActionPerformed
        populateTable("er", 7);
    }//GEN-LAST:event_pastDueCheckBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> alertsDropdown;
    private javax.swing.JLabel alertsLabel;
    private javax.swing.JButton backBtn2;
    private javax.swing.JComboBox<String> filterDropdown;
    private javax.swing.JLabel filterLabel;
    private javax.swing.JTable filterTbl;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox pastDueCheckBox;
    // End of variables declaration//GEN-END:variables
}
