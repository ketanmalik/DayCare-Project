/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.Classroom;

import Business.Directories.ClassroomDirectory;
import Business.Directories.TeacherStudentDirectory;
import Business.Entities.Classroom;
import Business.Entities.Student;
import Business.Entities.Teacher;
import UI.MainJFrame.MainJFrame;
import static UI.MainJFrame.MainJFrame.alertsBtn;
import static UI.MainJFrame.MainJFrame.classroomBtn;
import static UI.MainJFrame.MainJFrame.homeBtn;
import static UI.MainJFrame.MainJFrame.signOutBtn;
import java.awt.Color;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ketanmalik
 */
public class ClassroomJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ClassroomJPanel
     */
    private JPanel displayPanel;
    private TeacherStudentDirectory tsd;
    private ClassroomDirectory cd;

    public ClassroomJPanel(JPanel displayPanel) {
        initComponents();
        this.displayPanel = displayPanel;
        this.tsd = TeacherStudentDirectory.getObject();
        this.cd = ClassroomDirectory.getObject();
        modifyButtons();
        showButtons(true);
        MainJFrame.page = "classroom";
        populateTable();
    }

    private void modifyButtons() {
        homeBtn.setOpaque(false);
        homeBtn.setContentAreaFilled(false);
        homeBtn.setBorderPainted(false);
        homeBtn.setForeground(Color.white);

        classroomBtn.setOpaque(false);
        classroomBtn.setContentAreaFilled(false);
        classroomBtn.setBorderPainted(false);
        classroomBtn.setForeground(Color.black);

        alertsBtn.setOpaque(false);
        alertsBtn.setContentAreaFilled(false);
        alertsBtn.setBorderPainted(false);
        alertsBtn.setForeground(Color.white);

        signOutBtn.setOpaque(false);
        signOutBtn.setContentAreaFilled(false);
        signOutBtn.setBorderPainted(false);
    }

    public void showButtons(boolean bool) {
        homeBtn.setVisible(bool);
        classroomBtn.setVisible(bool);
        alertsBtn.setVisible(bool);
        signOutBtn.setVisible(bool);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        classroomTbl = new javax.swing.JTable();

        setBackground(new java.awt.Color(0, 153, 153));

        classroomTbl.setAutoCreateRowSorter(true);
        classroomTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Room ID", "Group ID", "Teacher", "Age Group"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(classroomTbl);
        if (classroomTbl.getColumnModel().getColumnCount() > 0) {
            classroomTbl.getColumnModel().getColumn(0).setResizable(false);
            classroomTbl.getColumnModel().getColumn(1).setResizable(false);
            classroomTbl.getColumnModel().getColumn(2).setResizable(false);
            classroomTbl.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(661, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(285, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) classroomTbl.getModel();
        dtm.setRowCount(0);

        for (Classroom c : cd.getClassroomDirectory()) {
            Map<String, Map<Teacher, List<Student>>> clsGrp = new HashMap<>();
            clsGrp = c.getClassGroup();
            Set<Map.Entry<String, Map<Teacher, List<Student>>>> clsGrpEntry = clsGrp.entrySet();
            Iterator itr = clsGrpEntry.iterator();
            while (itr.hasNext()) {
                Map.Entry<String, Map<Teacher, List<Student>>> e = (Map.Entry<String, Map<Teacher, List<Student>>>) itr.next();
                Map<Teacher, List<Student>> teacherStudent = new HashMap<>();
                teacherStudent = e.getValue();
                Set<Map.Entry<Teacher, List<Student>>> teacherStudentEntry = teacherStudent.entrySet();
                Iterator itr2 = teacherStudentEntry.iterator();
                while (itr2.hasNext()) {
                    Map.Entry<Teacher, List<Student>> e2 = (Map.Entry<Teacher, List<Student>>) itr2.next();
                    Object[] row = new Object[4];
                    row[0] = c;
                    row[1] = e.getKey();
                    row[2] = e2.getKey();
                    row[3] = e2.getKey().getCategory();
                    
                    dtm.addRow(row);
                }
            }
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable classroomTbl;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
